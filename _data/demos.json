{
	"f_cifar_grid": {
		"title":"CIFAR samples",
		"description": "Grid of random image samples from CIFAR-10",
		"category": "figure",
		"link":"/demos/f_cifar_grid/",
		"thumb":"/images/demos_thumbs/f_cifar_grid.jpg"
	},
	"f_mnist_1layer": {
		"title":"MNIST 1-layer neural net",
		"description": "Depiction of a 1-layer neural network for MNIST classification",
		"category": "figure",
		"link":"/demos/f_mnist_1layer/",
		"thumb":"/images/demos_thumbs/f_mnist_1layer.jpg"
	},
	"f_mnist_grid": {
		"title":"MNIST samples",
		"description": "Grid of random image samples from MNIST",
		"category": "figure",
		"link":"/demos/f_mnist_grid/",
		"thumb":"/images/demos_thumbs/f_mnist_grid.jpg"
	},
	"f_mnist_input": {
		"title":"MNIST as input",
		"description": "Pixels as input",
		"category": "figure",
		"link":"/demos/f_mnist_input/",
		"thumb":"/images/demos_thumbs/f_mnist_input.jpg"
	},
	"f_mnist_weights": {
		"title":"MNIST weights",
		"description": "Visualizing weights of a trained MNIST classification network",
		"category": "figure",
		"link":"/demos/f_mnist_weights/",
		"thumb":"/images/demos_thumbs/f_mnist_weights.jpg"
	},
	"f_mnist_net": {
		"title":"MNIST neural network",
		"description": "An ordinary architecture for MNIST image classification",
		"category": "figure",
		"link":"/demos/f_mnist_net/",
		"thumb":"/images/demos_thumbs/f_mnist_net.jpg"
	},
	"f_neural_net": {
		"title":"Neural network",
		"description": "The basic parts of a neural network and terminology",
		"category": "figure",
		"link":"/demos/f_neural_net/",
		"thumb":"/images/demos_thumbs/f_neural_net.jpg"
	},
	"f_neuron": {
		"title":"Artificial neuron",
		"description": "The most elementary particle of a neural network",
		"category": "figure",
		"link":"/demos/f_neuron/",
		"thumb":"/images/demos_thumbs/f_neuron.jpg"
	},
	"f_weights_analogy": {
		"title":"Weights analogy",
		"description": "",
		"category": "figure",
		"link":"/demos/f_weights_analogy/",
		"thumb":"/images/demos_thumbs/f_weights_analogy.jpg"
	},
	"tsne_viewer": {
		"title":"t-SNE grid viewer",
		"description": "Explore a t-SNE grid of animal images live in your browser",
		"category": "demo",
		"link":"/demos/tsne_viewer.html",
		"thumb":"/images/demos_thumbs/tsne_viewer.jpg"
	},
	"simple_forward_pass": {
		"title":"Simple forward pass",
		"description": "A demo showing each step of a forward pass in a neural network",
		"category": "demo",
		"link":"/demos/simple_forward_pass/",
		"thumb":"/images/demos_thumbs/simple_forward_pass.jpg"
	},
	"forward_pass_mnist": {
		"title":"MNIST forward pass",
		"description": "Demo of classifying MNIST images",
		"category": "demo",
		"link":"/demos/forward_pass_mnist/",
		"thumb":"/images/demos_thumbs/forward_pass_mnist.jpg"
	},
	"forward_pass_cifar": {
		"title":"CIFAR-10 forward pass",
		"description": "Demo of classifying CIFAR-10 images",
		"category": "demo",
		"link":"/demos/forward_pass_cifar/", 
		"thumb":"/images/demos_thumbs/forward_pass_cifar.jpg"
	},
	"convolution": {
		"title":"Convolution",
		"description": "How convolution works in a convnet",
		"category": "demo",
		"link":"/demos/convolution/",
		"thumb":"/images/demos_thumbs/convolution.jpg"
	},
	"convolution_all": {
		"title":"Convolution (all filters)",
		"description": "Show all the convolutional filters in a convnet layer",
		"category": "demo",
		"link":"/demos/convolution_all/",
		"thumb":"/images/demos_thumbs/convolution_all.jpg"
	},	
	"confusion_mnist": {
		"title":"MNIST confusion matrix",
		"description": "A confusion matrix of a trained MNIST classification network",
		"category": "demo",
		"link":"/demos/confusion_mnist/",
		"thumb":"/images/demos_thumbs/confusion_mnist.jpg"
	},
	"confusion_cifar": {
		"title":"CIFAR-10 confusion matrix",
		"description": "A confusion matrix of a trained CIFAR-10 classification network",
		"category": "demo",
		"link":"/demos/confusion_cifar/",
		"thumb":"/images/demos_thumbs/confusion_cifar.jpg"
	},
	"mnist_weights": {
		"title":"MNIST weights",
		"description": "Visualize the weights of a 1-layer MNIST network developing in real-time",
		"category": "demo",
		"link":"/dev/demos/mnist_weights.html",
		"thumb":"/images/demos_thumbs/mnist_weights.jpg"
	},
	"cifar_weights": {
		"title":"CIFAR-10 weights",
		"description": "Visualize the weights of a 1-layer CIFAR-10 network developing in real-time",
		"category": "demo",
		"link":"/dev/demos/cifar_weights.html", 
		"thumb":"/images/demos_thumbs/cifar_weights.jpg"
	},
	"ml5_classifier": {
		"title":"Simple template: Webcam classifier",
		"description": "Train a Neural Network to distinguish between class A and class B",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/BJkaHBMYm", 
		"thumb":"/images/guides_thumbs/ml5_classifier.jpg",
	},
	"ml5_image": {
		"title":"Webcam classifier + image",
		"description": "Train class A and class B and output different images",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/rJqk5_1aX", 
		"thumb":"/images/guides_thumbs/ml5_image.jpg",
	},
	"ml5_sound": {
		"title":"Webcam classifier + sound",
		"description": "Train class A and class B and trigg different sound samples",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/ryLlIOJpX", 
		"thumb":"/images/guides_thumbs/ml5_sound.jpg",
	},
	"ml5_camera": {
		"title":"Trainable Camera",
		"description": "Teach the webcam when to take a picture",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/BynhuHsqX", 
		"thumb":"/images/guides_thumbs/ml5_camera.jpg",
	},
	"ml5_guitar": {
		"title":"Play guitar with your webcam",
		"description": "",
		"category": "ml5",
		"link":"https://editor.p5js.org/genekogan/sketches/SytKVEjg4", 
		"thumb":"/images/demos_thumbs/ml5_guitar.jpg",
	},
	"ml5_mobilenet": {
		"title":"Mobilenet pretrained classification",
		"description": "Use a pre-trained model to recognise objects",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/H1L-KrzFQ", 
		"thumb":"/images/guides_thumbs/ml5_mobilenet.jpg",
	},
	"ml5_speech": {
		"title":"Classification to speech",
		"description": "Recognise objects and use text-to-speech to have them spoken out loud",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/Sk8M6mqh7", 
		"thumb":"/images/guides_thumbs/ml5_speech.jpg",
	},
	"ml5_regression": {
		"title":"Webcam regressor",
		"description": "Control the size of a rectangle using your webcam",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/B1g7ds0wm", 
		"thumb":"/images/guides_thumbs/ml5_regression.jpg",
	},
	"ml5_regression_generative": {
		"title":"Regression + generativity",
		"description": "",
		"category": "ml5",
		"link":"https://editor.p5js.org/genekogan/sketches/BkHwZ4il4", 
		"thumb":"/images/demos_thumbs/ml5_regression_generative.jpg",
	},
	"ml5_regression_pong": {
		"title":"Webcam pong",
		"description": "",
		"category": "ml5",
		"link":"https://editor.p5js.org/genekogan/sketches/SJgB8rceN", 
		"thumb":"/images/demos_thumbs/ml5_regression_pong.jpg",
	},
	"ml5_playback": {
		"title":"Playback rate camera",
		"description": "Control the playback rate of a sound file using your webcam",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/HyEDToYnQ", 
		"thumb":"/images/guides_thumbs/ml5_playback.jpg",
	},
	"ml5_posenet": {
		"title":"Webcam PoseNet",
		"description": "Use your webcam and PoseNet to do real-time human pose estimation",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/rkz42BzYQ", 
		"thumb":"/images/guides_thumbs/ml5_posenet.jpg",
	},
	"ml5_posenet_sound": {
		"title":"PoseNet + Sound",
		"description": "",
		"category": "ml5",
		"link":"https://editor.p5js.org/genekogan/sketches/Hk2Q4Sqe4", 
		"thumb":"/images/demos_thumbs/ml5_posenet_sound.jpg",
	},
	"ml5_posenet_nose": {
		"title":"Draw with your nose",
		"description": "Draw with your nose using PoseNet",
		"category": "ml5",
		"link":"https://editor.p5js.org/AndreasRef/sketches/r1_w73FhQ", 
		"thumb":"/images/guides_thumbs/ml5_posenet_nose.jpg",
	},
	"facetracker_knn": {
		"title":"Facetracker + k-Nearest Neighbors",
		"description": "Train a k-NN algorithm to recognise different facial expressions",
		"category": "demos",
		"link":"https://editor.p5js.org/genekogan/sketches/S1rLrG2l4", 
		"thumb":"/images/guides_thumbs/facetracker_knn.jpg",
	},
	"Contribute": {
		"title": "Contribute!",
		"description": "Contribute!",
		"category": "figure demo ml5",
		"link":"/guides/Contribute/",
		"thumb":"/images/guides_thumbs/default.jpg",
	}
}



